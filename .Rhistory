plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch = 2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(data=mtcars,formula=mpg ~ cyl)
boxplot(formula=mpg ~ cyl,data=mtcars)
hist(mtcars$mpg)
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
z<-c(555,)
z<-c(555,z)
c(z,555,z)
z*2+100
sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+100
(z*2+1000)
(z*2+100)
nxt()
skip()
my_div
bye()
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
getwd()
ls()
x<-9
ls()
dir()
?list.files
args()
list.files()
args(list.files)
old.dir<-list.files
old.dir<-getwd()
testdir<-dir.create()
dir.create(testdir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create
file.create("mytest.R")
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R" "mytest2.R")
file.rename("mytest.R mytest2.R")
file.rename("mytest.R to mytest2.R")
file.rename(mytest.R to mytest2.R)
skip()
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create("testdir2","testdir3")
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3", recursive=TRUE))
dir.create(file.path("testdir2","testdir3"),recursive = TRUE))
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
setwd()
setwd(old.dir)
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
c(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10, length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each = 10)
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My", "name", "is")
my_char
paste(my_char,collapse = " ")
c(my_char,"ram")
my_name<-c(my_char,"ram")
my_name
paste(myname,collapse = " ")
paste(my_name,collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"), sep =  "")
paste(LETTERS,1:4,sep = "-")
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
this<-x[!is.na(x)&x>0]
x[!is.na(x)&&x>0]
x[!is.na(x)&x>0]
c(3,5,7)
[c(3,5,7)]
x<-[c(3,5,7)]
skip()
x[0]
x[3000]
x,x[c(-2,-10)]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo"  "bar"  "norf")
names(vect2)<-c("foo","bar","norf")
identical
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
skip
skip()
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
2
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
atributes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(data=NA,nrow=4,ncol=5,byrow=FALSE,dimnames=NULL)
my_matrix2<-matrix(1:20)
my_matrix2<-matrix(1:20,nrow=4,ncol=5,byrow=FALSE,dimnames=NULL)
ida\entib
i\;ptib
identical(my_matrix,my_matrix2)
identical() \\b
patients<-b
patients<-b
|cb
patients<-b
patients<-b
cb
patients<-c(Bill, Gina, Kelly, and Sean)
skip()
b
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
b
b
cb
b
cb
class()
b
czb
czb
b
b
class(my_data)
cb
cb
b
cnames<-b
b
|cb
b
cb
b
b
cnames<-c("patient", "age","weight", "bp", "rating", "test")
b
colnames(cnames)
b
colnames(my_data)<-b
cb
cb
b
cb
b
cb
colnames(my_data)<-b
b
colnames(my_data)<-b
colnames(my_data) <- cnames.
colnames(my_data) <- cnames
my_data
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!5==7
FALSE&FALSE
TRUE&b
TRUE & c(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE).
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE).
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE ||c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6,!FALSE)
ints<-b
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
submit()
skip()
my_mean(c(4,5,10))
submit()
skip()
remainder(5)
remainder(11,5)
remainder(divisor = 11,num = 5)
remainder(4,div=2)
args(remainder)
submit()
skip()
standard deviance(c(1.4,3.6,7.9,8.8))
skip()
evaluate(function(x){x+1},6)
evaluate(function(x),c(8,4,0))
skip()
evaluate(function(x){x[3]},c(8,4,0))
skip()
?paste
paste("Programming", "is", "fun!")
telegram
telegram
submit()
skip()
telegram(sun)
skip()
mad_libs()
skip()
mad_libs()
skip()
skip()
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
2
skip()
q()
swirl()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
bsapply()
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
skip()
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
sapply(flags,unique)
vapply(flags,unique,muremic(1))
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$landmass,flags$animate,mean)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
0
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
?sample
sample(1:6,4,replace = TRUE)
(1/6)^4
sample(1:6,4,replace = )
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(1:100,c(0,1),prob = c(0.3,0.7))
skip()
sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100,prob=0.7)
flips2<-rbinom(c(0,1),size = 100,prob = 0.7)
rbinom(n=100,size = 1,prob = 0.7)
flips2<-rbinom(n=100,size = 1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(mean = 100,sd = 25,10)
rpois(mean=10,5)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
bye()
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass)
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3<-strptime()
strptime(t3)
t3<-"October 17, 1986 08:24"
strptime(t3,"%B %d, %Y %H:%M")
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
q()
library("swirl", lib.loc="D:/BA software setup/R/R-3.3.2/R-3.3.2/library")
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab = "Speed")
plot(x=cars$speed,y=czb)
plot(x=b)
plot(x=cars$speed,y=cb)
plot(x=cars$speed,y=b
q
plot(x=cars$speed,y=cars$dist,ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab = )
plot(x=cars$speed,y=cars$dist,xlab = "Speed",ylab = "Stopping Distance")
plot(cb)
plot(b)
plot(cars,main="My Plot")
plot(cars,main="My Plot",title="My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(b)
plot(b)
plot(b)
plot(b)
plot(b)
b
|b
b
b
plot(b)
plot(cars,col=2)
plot(cars.xlim=c(10,15))
plot(cars,xlim=czb)
plot(czb)
plot(czb)
plot(cars,xlim=b)
plot(b)
plot(b)
plot(cars,xlim=czb)
plot(cars,xlim=c(10,15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(formula=mpg ~ cyl,data=mtb)
boxplot(formula=mpg ~ cyl,data=mtb
|q
q
boxplot(formula=mpg ~ cyl,data=mtcars)
hist(mtb)
hist(mtcars$mpg)
q()
setwd("C:/Imbalanceddataproject")
library(data.table)
train<-fread("train.csv",na.strings = c(""," ","?","NA",NA))
test<-fread("test.csv",na.strings = c(""," ","?","NA",NA))
dim(train);str(train);View(train)
f_measure
set.seed(2002)
?makeLearner
